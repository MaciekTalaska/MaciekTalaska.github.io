<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Not only zeroes and ones</title>
  <subtitle>code is a modern poetry</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://maciektalaska.github.io/"/>
  <updated>2017-03-20T03:12:28.333Z</updated>
  <id>http://maciektalaska.github.io/</id>
  
  <author>
    <name>Maciek Talaska</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Wrocloverb 2017: Elixir vs Ruby</title>
    <link href="http://maciektalaska.github.io/2017/03/20/Wrocloverb-2017-Elixir-vs-Ruby/"/>
    <id>http://maciektalaska.github.io/2017/03/20/Wrocloverb-2017-Elixir-vs-Ruby/</id>
    <published>2017-03-20T03:04:42.000Z</published>
    <updated>2017-03-20T03:12:28.333Z</updated>
    
    <content type="html"><![CDATA[<p>I had a chance to spent couple of hours on the annual Wrocloverb conference this weekend. One of the most anticipated events during the conference for myself was “Elixir Panel”. I had high hopes for great, open discussion on the platform that seem to attract more and more people from Ruby community.</p>
<p>Unfortunately this was not that great as I expected. My biggest complaint was the bias, but let me start from the very beginning.</p>
<p>The panel itself was in the form of “experts have voice”. There was very little involvement from the audience (apart from one person, who at some point joined experts, or should I rather say replaced Roberet. Unfortunately I do not recall this person’s name). </p>
<p>The “Elixir side” were two developers having background in Ruby (as well as in Elixir):</p>
<ul>
<li>Hubert Łępicki</li>
<li>Michał Muskała</li>
</ul>
<p>“Ruby side” was represented by two Ruby, Rails experts from Arkency (the company behind Wrocloverb):</p>
<ul>
<li>Andrzej Krzywda</li>
<li>Robert Pankowiecki<br>First thing, and first bias: AFAIR neither Andrzej nor Robert have any hands on experience with Elixir. That means that on Elixir side there was good understanding of Ruby/Rails applications, but on the other hand - the “Ruby side” was very lacking in terms of ‘What Elixir is’ (saying that ‘Elixir is Erlang based functional language’ is just a simplification).</li>
</ul>
<h3 id="Questions">Questions</h3><p>It all started with scalability (which is a selling point for Elixir) and performance. At the moment Elixir seem to perform a bit better than classic Ruby (so not JRuby, or Ruby run using Graal + Truffle). There is a lot of effort to make Ruby perform better and better. What struck me was that a claim  that ‘performance is not an issue’. Well, I think it is actually the opposite. In todays world it is quite common that app popularity may spark right out of the blue. App performance is important as it allows more clients (customers) to use the app the same time, and that makes cost of a single request cheaper. </p>
<p>Discussion on scalability lasted for good 10-15 minutes. At some point I have heard a comment “what else is there in Elixir apart from scalability” ;)</p>
<ol>
<li>Elixir community is not great.</li>
</ol>
<p>To me that was really bold statement. Recently I have seen some talk from Elixir conference, and on one of the slides it was pictured where do people come from when migrating to Elixir. I am not sure about the exact number, but the vast majority of people come from Ruby+Rails. So… if Elixir community is not great, that would mean that… RoR community is not great :&gt;&gt;&gt;</p>
<p>I would say that Erlang/Elixir community may be a bit different than Ruby’s. I have the feeling that there are quite many Erlang developers who are twice as old as some of the Ruby devs. It may not be true that there are so many experienced users of Erlang, but I still have a feeling there are definitely more Erlang devs in their 50s than people of the same age in the Ruby community. Erlang has been around for ‘a while’, it is doing great again, inspires other languages - such as Elixir etc. I may suspect that some of the people being in their 50s or even 60s may behave a bit differently than people who are in their mid 20s. Does that automatically mean that Erlang developers are not friendly? I wouldn’t say so - but personally I have a very little experience with Erlang community so far.<br>To sum up: yes, Erlang community may be a bit different, maybe not be that dynamic, but for sure is not hostile. Elixir’s community is actually a lot similar to Ruby community, and from my experience it is extremely friendly.</p>
<ol>
<li><code>I have attended Erlang/Elixir meetup and they were talking for 1,5 hour about authentication. Hey, Elixir People! - Devise is already there in Ruby for years!</code></li>
</ol>
<p>Well… that’s funny again. Erlang/OTP is very mature platform on top of which Elixir is built. Phoenix is a web framework for Elixir. Elixir and Phoenix are quite new comparing to Ruby+Rails. And that means that some of the concepts still has to be ‘borrowed’ from other languages/platforms. The same thing happened to Ruby - it took some time for Rails to emerge.</p>
<ol>
<li>Apart from scalability why would I use Elixir?</li>
</ol>
<p>From my perspective it could be just a matter of taste. If you’re more into the functional programming paradigm - give Elixir a try. If you are interested in actor model, being able to write applications in a bit different way, make your application fault tolerant (or just want to learn how it works in Erlang, but Elixir’s syntax is more appealing) - give Elixir a try.<br>Sometimes it is good just to try something different. You don’t necessarily have to switch, but such an experience will definitely broaden your knowledge and make you a better developer.</p>
<ol>
<li>Why use Elixir/Erlang with their actor model if I could use Akka + Scala/Java (nad JVM is less exotic than BEAM)</li>
<li>Why use Elixir/Erlang if we may have actors in Ruby?</li>
</ol>
<p>Akka’s and Erlang/Elixir’s implementation of actors are a bit different from what I’ve read. It was alread pointed by Michał that there is some problems with actors being blocked sometimes when using Akka. This doesn’t happen with Erlang/Elixir actors (process).<br>The other important thing worth noting is that actors (processes) and all the mechanisms used to maintain them are core part of Erlang/Elixir. This is different with Akka, as this is ‘just’ a library. There is no extra support for such a paradigm (actor model) into the JVM itself.<br>If someone wants just to try out the concept it is good enough to use the favorite programming language to play with actors. No need to switch to Elixir or Scala+Akka. Introducig actors could bring some benefits to your application(s), but if you expect extra stability and fault tolerance in your Ruby application just because you’re using Ruby’s implementation of actors (and there is no special support for this paradigm in Ruby VM) that will simply not happen.</p>
<ol>
<li>Ecto+Phoenix are small in terms of LoC. Rails is big. In x years Phonix &amp; Ecto will definitely grow.</li>
</ol>
<p>Well, that may or may not be true. It all depends. Thinking this way would mean that Rails is (was) no better than other frameworks (as you can’t keep your awesomeness thorough the years). I think that many people were using Rails for quite a long time, and right now some of them are helping make Ecto+Phoenix better. It doesn’t mean that Ecto+Phoenix will be perfect, no - there will be definitely some things to argue about :) But what I personally think is that there is a chance to learn on experience of others. There is a chance that Ecto+Phoenix may actually improve in some areas in regards to Rails.</p>
<ol>
<li>Tooling in Elixir? Is it mature?</li>
</ol>
<p>It has been said that there are not many great editors/IDEs with support for Elixir. It has been also noted that this will be addressed during the summer 2017, as Microsoft invented protocol of interoperation between editor/IDE and Elixir will be implemented. </p>
<p>Personally I encourage you to give Emacs/Spacemacs + Alchemist plugin a try. From all those editors that I have tried out already, this combo seems to be the most mature, and the most convenient. There are plugins for Atom, Visual Studio Code, Vim (these are the ones I tried out) and many other editors. There is also a plugin for IntelliJ if you prefer a full blown IDE instead of ‘just an editor’ - I haven’t tried IntelliJ with Elixir plugin on my own.</p>
<p>It is always possible to have better tooling, so this is a bit of a ‘neverending story’ for us, developers. On the other hand it is worth mentioning that Erlang/Elixir provide some interesting tools - for example nice process monitor - which I believe may not be available on other platforms. So yes - tooling differs, but it changes for each and every platform (for better, of course!).</p>
<ol>
<li>I have x years of experience in creating Rails apps. AFAIR there were just as little as y projects that could benefit from scalability (or better performance). </li>
</ol>
<p>Well that is actually quite simple - you just don’t touch different niches when using Rails. The good example that were mentioned during the talk were: game servers, IoT. I do understand that each and every application may have a complex business logic, and this is what becomes the most important requirement - to have things coded in a way that makes business happy. Sometimes it does happens that there are also important non-functional requirements to be met. Some of these could actually be scalabilty or performance.</p>
<p>But… if you don’t question your choices (some of them may have been made quite some time ago) so how do you progress? Why not just check what some other, hot, not-so-mature technolgies have to offer? What if there is really <em>something</em> out there? You may just be unaware how some other tech could improve your life as a developer. </p>
<ol>
<li>Success story: “thanks to Rails app could be shipped in a short time. Later as the cost of a request is high - that business needs to close. But at least we got our foot into the business…”</li>
</ol>
<p>Is it a success story actually? Doesn’t that make Rails an Ruby a PoC platform? A platform which is great for prototyping, but actually is not that great when it comes to running business depending on it? We’re not all running such a big systems as Twitter or LinkedIn, but there are well known stories of migrating from RoR to other platforms and languages only due to the fact the those other technologies offered better performance (or scalability).<br>That question is really one that you can argue about for hours…</p>
<ol>
<li>It is easier for people to become stars in Elixir community.</li>
</ol>
<p>I dont really get this one. It was the same with Ruby/Rails 10 years ago. Each and every technology has its own ‘immature’ years, where many libraries are yet to be created (or simply need to mature).<br>The other thing is: if you realize that there are no (yet) developers who started their journey in software craftmanship with Elixir - does that mean that all we - Elixir lovers - are just attention seekers? ;) Does that mean that only ‘weak’ developers take the Elixir path - as it is so easy to become ‘a star’ in Elixir community?<br>Another thing - please note that one of the experts was Michał, who not only contribute to Ecto and a person who actually is in the middle of writing a book on Elixir. Taking all that under considertation - don’t you think it was actually rude, as it was actually <em>argumentum ad personam</em>. This question made me somewhat… uncomfortable. I know that Michał didn’t take it personally, but still, it was weird/strange question.</p>
<ol>
<li>Elixir community is anti-Ruby…</li>
</ol>
<p>Well, that strange, as I am following Elixir community for ~9 months right now, and haven’t spotted such a hostile approach against any technology. Frankly speaking I felt that it was Ruby community on Wrocloverb who was… a bit anti-Elixir. This is what I found strange. I had the feeling (from previous attendances to this conference) that it was actually open to different approaches, languages and frameworks. It was the case with all the JS ecosystem (ClojureScript, React, many other technologies/frameworks), but the important thing to note here is that all the technologies warmly welcomed by Ruby community during Wrocloverb were actually technologies which could be easily consumed by Ruby developers to enhance their apps. There was no real Ruby competitor mentioned on the last 3 editions of Wrocloverb - or at least I don’t remember such a situation. This is where Elixir differs in comparison with ReactJS - Elixir is not something one incorporates into Rails/Ruby app. Elixir is also not a language that most of the Ruby devs find appealing (even though its Ruby inspired syntax). But the biggest thing here is that it seems that Elixir community grasped a momentum, and there is a lot of hype on Elixir right now. I suspect that some of the Rubbyist feel that Ruby/Rails may not be as popular in the future as they are right now. But instead of learning more about ‘the enemy’ is it so wise to be anti-Elixir? ;)</p>
<h3 id="Summary">Summary</h3><p>One thing that I didn’t particularly like was the bias. It was not as objective as I could (should?) have been. The strange thing was that after the panel finished, the moderator made a comment being happy that not as many people wanted to still experimet with Elixir as at the beginning of the panel.</p>
<p>If I were to sum the panel up it would boil down to: dissappointment. I expected interesting, open discussion on possibilities. What I got was quite a boring, cliche driven panel. A panel that (I belive) aimed to assure Ruby developers that Ruby still is THE LANGUAGE and that Rails is still THE FRAMEWORK. I am afraid that’s not really true. I don’t expect Ruby/Rails to disappear in the nearest future, but I don’t think it will stay as popular as it is/was. And this is not only due to emergence of Elixir+Phoenix - Rails today is just one of many web oriented frameworks that it is pleasure to work with. Rails inspired a lot of others, and no longer is the coolest kid on the block.</p>
<p>It is a good summary to point out that at the beginning of the discussion audience was asked if they were willing to try Elixir. At the end the question was asked once again. Not that many hands were floating in the air ;) Was it really ‘mission accomplished’ as moderator joked? I personally think that this panel discouraged some developers from trying Elixir. Why would you try someting different if your language and framework are… perfect? ;D</p>
<p>It is sad, that so many interesting questions were left unanswered (for example, question about mnesia). This panel could be of much greater benefit to all those who are not (yet) convinced that they should try Elixir, those who would take the extra effort to broaden their horizons.<br>This post already grew more than I expected, so I will try to answer some of the questions that are interesting, but due to the time constraint didn’t have a chance to reach experts.</p>
<p>I think that Wrocloverb 2017 lacked ‘an intoduction to Elixir for the masses’ type of talk. It could be quite hard for those, not being exposed to what Elixir is, follow the discussion on Elixir and Ruby. I am afraid those Ruby devs, who just hoped to get some key info on Eixir were left dissappointed.</p>
<p>Note: this is all written in a hurry, so I do apologize for all the typos or errors, poorly phrased sentences etc. </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I had a chance to spent couple of hours on the annual Wrocloverb conference this weekend. One of the most anticipated events during the c
    
    </summary>
    
      <category term="get-noticed-2017" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/"/>
    
    
      <category term="programming" scheme="http://maciektalaska.github.io/tags/programming/"/>
    
      <category term="Elixir" scheme="http://maciektalaska.github.io/tags/Elixir/"/>
    
      <category term="functional programming" scheme="http://maciektalaska.github.io/tags/functional-programming/"/>
    
      <category term="Erlang" scheme="http://maciektalaska.github.io/tags/Erlang/"/>
    
      <category term="Ruby" scheme="http://maciektalaska.github.io/tags/Ruby/"/>
    
      <category term="Rails" scheme="http://maciektalaska.github.io/tags/Rails/"/>
    
  </entry>
  
  <entry>
    <title>Elixir: setting up environment part 2: documentation</title>
    <link href="http://maciektalaska.github.io/2017/03/14/Elixir-setting-up-environment-part2-documentation/"/>
    <id>http://maciektalaska.github.io/2017/03/14/Elixir-setting-up-environment-part2-documentation/</id>
    <published>2017-03-14T19:11:53.000Z</published>
    <updated>2017-03-17T15:09:20.525Z</updated>
    
    <content type="html"><![CDATA[<p>In my last post (which was prepared some time ago) I have described how to use asdf for Erlang and Elixir version management.</p>
<p>There is one important thing that I have not covered: documentation. Erlang and Elixr both come with documentation included. For Elixir it is all simple as using <code>iex</code> and its <code>h</code> helper (read more about it: <a href="https://hexdocs.pm/iex/IEx.Helpers.html" target="_blank" rel="external">https://hexdocs.pm/iex/IEx.Helpers.html</a>). </p>
<p>For Erlang - there are manpages available. As always - things a bit more complicated when someone uses versions managers (such as asdf/kerl etc). First of all, you can’t expect that it would be possible to access Erlang’s manpages usin system ‘man’ - unfortunately this is not how things work (maybe if you install Erlang using repository instead of version manager such as asdf…). The other important thing is that documentation for Erlang is not properly installed when using asdf-erlang. Issuing <code>erl -man mnesia</code> (mnesia being name of the module) results in ‘No manual entry for mnesia’ instead of proer manual page being displayed.<br>I have found a temporary solution for that: <a href="http://stackoverflow.com/a/42053208" target="_blank" rel="external">http://stackoverflow.com/a/42053208</a></p>
<p>The proper solution would be to have documentation files downloaded, extracted and copied as part of the installation process. The manual workaround works for me at the moment, and I haven’t found enough time to try and enhance asdf-erlang to be capable of taking care of installing proper version of Erlang documentation.</p>
<p>It has been discussed that Elixir’s iex helper should be able to display documentation for Erlang modules (<a href="https://github.com/elixir-lang/elixir/issues/3589" target="_blank" rel="external">https://github.com/elixir-lang/elixir/issues/3589</a>). Unfortunately it seems that at the moment there is no working solution for such a behavior. There are some alternate solutions, but I haven’t tried any yet.</p>
<p>Interesting solution for viewing Erlag/Elixir documentation is Zeal (<a href="http://zealdocs.org" target="_blank" rel="external">http://zealdocs.org</a>). It is available for Linux, MacOS and Windows, and allows easy browser Erlang and Elixir modules. For some it may be much more convenient to use Zeal instead of using erl or iex depending if module is part of Elixir or Erlang.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In my last post (which was prepared some time ago) I have described how to use asdf for Erlang and Elixir version management.&lt;/p&gt;
&lt;p&gt;Ther
    
    </summary>
    
      <category term="get-noticed-2017" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/"/>
    
    
      <category term="programming" scheme="http://maciektalaska.github.io/tags/programming/"/>
    
      <category term="Elixir" scheme="http://maciektalaska.github.io/tags/Elixir/"/>
    
      <category term="my open source projects" scheme="http://maciektalaska.github.io/tags/my-open-source-projects/"/>
    
      <category term="functional programming" scheme="http://maciektalaska.github.io/tags/functional-programming/"/>
    
      <category term="Erlang" scheme="http://maciektalaska.github.io/tags/Erlang/"/>
    
  </entry>
  
  <entry>
    <title>Elixir: setting up environment</title>
    <link href="http://maciektalaska.github.io/2017/03/12/Elixir-setting-up-environment/"/>
    <id>http://maciektalaska.github.io/2017/03/12/Elixir-setting-up-environment/</id>
    <published>2017-03-12T22:31:37.000Z</published>
    <updated>2017-03-14T19:20:47.344Z</updated>
    
    <content type="html"><![CDATA[<p>One of the first things that is required when starting with new (programming) language is… to have compiler/interpreter installed and prepare the environment. Cliche…</p>
<p>I am happily using nvm (for NodeJS) gvm (for Go) and rvm (Ruby) for quite a long time, and I started looking for something similar for Elixir and Erlang.<br>I wasn’t very lucky at first, as my first approaches were not really successful. It was mainly due to the fact that I am happy user of fish shell, and I don’t want to give up using it (even in favor for zsh).</p>
<p>I think I am this kind of a person who really tries to makes everything complicated ;) Even though I could have Elixir and Erlang easily installed issuing something as simple as <code>sudo apt install erlang elixir</code> I am not really keen on doing that. Two reasons:</p>
<ul>
<li>in most cases versions of the compilers/interpreters in system repository are really not the latest (and that gets worse and worse as time passes by)</li>
<li>in such a scenario (installing programming language using system repository) it is not possible to have many different versions of a specified compiler / interpreter installed. And sometimes it is a must (maintenance of some old application etc.)</li>
</ul>
<h2 id="asdf_to_the_rescue!">asdf to the rescue!</h2><p>Back in summer 2016 I was quite successful using hybrid approach. I have used asdf (github.com/asdf-vm/asdf) for Erlang and kiex (<a href="https://github.com/taylor/kiex" target="_blank" rel="external">https://github.com/taylor/kiex</a>) for Elixir. Asdf was required only to get specified version of Erlang (as this is required by Elixir). Asdf was not accessible for me via fish - so I had to use bash for asdf and to have Erlang version of choice installed. Luckily kiex was running all fine under fish. The whole thing was not super convenient (switching between fish and bash etc.) but it worked.<br>The whole thing didn’t bother me that much, and I have been using such approach for quite a while. Today - as I was trying to set up environment on another machine - I have realized that asdf does support fish shell right now :) What a nice surprise. It all became so easy right now.</p>
<p>Asdf seems to be much more flexible than the other version managers that I am using. Asdf does not focus on one particular language. There is a concept of plugins for asdf which allow it use asdf for managing versions for many different languages. Installing plugin(s) is the second thing you will have to do right after you have asdf installed. But if you get to that point, installing new version of Erlang becomes as easy as:</p>
<p><code>asdf install erlang 19.2</code></p>
<p>which (to me) is as simple as <code>sudo apt install erlang</code> but, of course, using asdf has advantage of installing specific version(s)!</p>
<p>Asdf is very simple but powerful. All your version management is literally under your fingertips.</p>
<p>So, if you’re like me, and you like to have 100% control of the versions of compilers installed - please try asdf. This is a great tool!</p>
<p>I am actually thinking if it would be a good idea to try asdf for managing NodeJS, Go and Ruby versions (oh, and I am planning to get my hands dirty a bit with Clojure and Rust in the nearest future, and asdf supports these as well…) </p>
<h2 id="Caution:_dependencies">Caution: dependencies</h2><p>It is essential to study erlang plugin home page. It brings a lot of info on dependencies that are required to have Erlang offer everything. I haven’t paid enough attention first, and ended up with environment I wasnt able to run obser (or debugger). This particular issue is easily fixed by installing dev version of wxwidgets library (and rebuilding Erlang, unfortunately…). </p>
<p>So if you encounter “wxe_driver.so” related error whenever you try to launch observer/debugger - you know what to do :)</p>
<h2 id="Elixir">Elixir</h2><p>Having Erlang installed, and being familiar with asdf, bringing Elixir on board is piece of cake (assuming you have elixir plugin for asdf installed first):</p>
<p><code>asdf install elixir 1.3.4</code></p>
<p>Elixir installation is much, much faster than Erlang. </p>
<h2 id="Disadvantages_of_asdf">Disadvantages of asdf</h2><p>The only disdvantage of asdf I can think of right now is that installing new version of Erlang does take time. Why? It is not as simple as just retrieving binary from some repository. Source code for specific version is being downloaded and then built. It all take several minutes on my machine - but hey, how often do you install new version of your favorite compiler? Personally I think that flexibility described is worth waiting from time to time to have a specific version of the language installed. It is important to note that removing version previously installed is almost instant.<br>Note: after adding additional libraries (wxgtk-dev among others, so that I can start observer and debugger) compilation time now takes significantly longer. It is the price I am still willing to pay for the flexibility that asdf brings.</p>
<p>After a quick break from writing this blog post, I realized that there is one more thing which I don’t particularly like about asdf. Installing a new plugin requires one to go to asdf project site on github and check what is the plugin repo url - when you have it, a simple <code>asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git</code> (for Elixir) will do. I’d rather have possibility of doing all that via command line. But that a really minor thing.</p>
<h2 id="Sidenote:">Sidenote:</h2><p>I have also tried using kerl (github.com/kerl/kerl) for Erlang and kiex (github.com/taylor/kiex) for Elixir, but it was not all that convenient as asdf with 2 plugins. I am not sure if it was due to the fact that I wanted kerl and kiex to run under fish shell… but as asdf works so well for me right now - I am no longer looking for any alternatives.</p>
<h2 id="Summary">Summary</h2><p>I am happily using asdf with Erlang and Elixir for quite some time, and frankly speaking I started thinking of giving up on other solutions, such as nvm, gvm, rvm etc. Why would I bother with so many different tools/scripts if I may have just one (plus couple of additional plugins)?<br>The advantage of having asdf replacing all other version managers is that I don’t have to remember about differences in command line arguments / switches.</p>
<p>One thing may may not be that easy to achieve using asdf with its NodeJS plugin: having specific version of NodeJS installed with all the plugins from current (or yet another installed version). I am using this approach quite often, as I have to have some global pacakges installed (for example: to make hexo, yeoman work). Using nvm this is as simple as: <code>nvm install v7.4.0 --reinstall-packages-from=v7.0.0</code>. It sees that asdf-nodejs (<a href="https://github.com/asdf-vm/asdf-nodejs" target="_blank" rel="external">https://github.com/asdf-vm/asdf-nodejs</a>) doesn’t support such a behavior.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;One of the first things that is required when starting with new (programming) language is… to have compiler/interpreter installed and pre
    
    </summary>
    
      <category term="get-noticed-2017" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/"/>
    
      <category term="programming" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/programming/"/>
    
      <category term="functional programming" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/programming/functional-programming/"/>
    
    
      <category term="Elixir" scheme="http://maciektalaska.github.io/tags/Elixir/"/>
    
      <category term="Erlang" scheme="http://maciektalaska.github.io/tags/Erlang/"/>
    
      <category term="fish shell" scheme="http://maciektalaska.github.io/tags/fish-shell/"/>
    
      <category term="asdf" scheme="http://maciektalaska.github.io/tags/asdf/"/>
    
      <category term="asdf-erlang" scheme="http://maciektalaska.github.io/tags/asdf-erlang/"/>
    
      <category term="asdf-elixir" scheme="http://maciektalaska.github.io/tags/asdf-elixir/"/>
    
  </entry>
  
  <entry>
    <title>Linkr - description of the project</title>
    <link href="http://maciektalaska.github.io/2017/03/12/Linkr-description-of-the-project/"/>
    <id>http://maciektalaska.github.io/2017/03/12/Linkr-description-of-the-project/</id>
    <published>2017-03-12T21:49:01.000Z</published>
    <updated>2017-03-12T22:49:30.971Z</updated>
    
    <content type="html"><![CDATA[<p>This week I have been preparing for starting work on my Linkr project. I have been thinking about functionalities, and what mechanisms the project should support. What I have planned so far is:</p>
<p>Milestone 1: </p>
<ul>
<li>any user should be allowed to add a link (URI) + short description of the resource</li>
<li>any user should be able to search (the search mechanism should look for the search term in the description and the URI itself)</li>
</ul>
<p>Milestone 2:</p>
<ul>
<li>user should be allowed to add tags</li>
<li>user should be allowed to sort filter links by tags </li>
</ul>
<p>Milestone 3:</p>
<ul>
<li>user should be allowed to create an acount - i.e. only registered users should be able to add new links (that whould be a change to what is M1)</li>
<li>only owner should be able to change description of the link (I think it should not be possible to remove added links)</li>
</ul>
<p>Milestone 4:</p>
<ul>
<li>user should be able to see only links of tags of interest (global filtering for logged in user)</li>
</ul>
<p>Mileston 5:</p>
<ul>
<li>‘likes’ - users should be able to sort links starting with those which were given the highest rank in the category. I am not sure how the sorting should actually work. I guess it should not sort all the links within particular tag - that would be a nonse, as it could happen that old link were displayed on the top all the time. Maybe it should be as follows: “sort by date first (descending) and then after the ranking”?</li>
</ul>
<p>Milestone 6:</p>
<ul>
<li>users should be allowed to use rss/atom - so that they’re constantly updated with new links being added</li>
</ul>
<p>Milestne 7:</p>
<ul>
<li>users should recieve email notification on new links - this option should be configurable, so that it is possible to receive a notifaction in following scenarios:<ul>
<li>no notifications at all</li>
<li>after there is a new link added</li>
<li>daily</li>
<li>on a specific day/time of the week (I am not really sure about that. I am not 100% sold to that idea, as I don’t know if such a flexibility is important. It may as well be fixed as - Friday 6PM GMT or something alike)</li>
</ul>
</li>
</ul>
<p>If I were to sum the whole idea of the project - I’d say that it is something like ‘delicious for a group of people’. I have a strong feeling that this could be useful for a group of people who may be exploring a specific area of knowledge, and this would be a nice thing to share their finding among the group.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This week I have been preparing for starting work on my Linkr project. I have been thinking about functionalities, and what mechanisms th
    
    </summary>
    
      <category term="get-noticed-2017" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/"/>
    
    
      <category term="programming" scheme="http://maciektalaska.github.io/tags/programming/"/>
    
      <category term="my open source projects" scheme="http://maciektalaska.github.io/tags/my-open-source-projects/"/>
    
      <category term="elixir" scheme="http://maciektalaska.github.io/tags/elixir/"/>
    
  </entry>
  
  <entry>
    <title>Why Elixir?</title>
    <link href="http://maciektalaska.github.io/2017/03/04/Why-Elixir/"/>
    <id>http://maciektalaska.github.io/2017/03/04/Why-Elixir/</id>
    <published>2017-03-04T21:32:23.000Z</published>
    <updated>2017-03-05T22:32:56.216Z</updated>
    
    <content type="html"><![CDATA[<p>In my first blognote related to this years edition of “Get Noticed” I have mentioned that I am planning to develop web application using Elixir &amp; Phoenix. Why Elixr? </p>
<p>I have a chance to develop web applications using variety of technologies: C# + ASP.NET &amp; ASP.NET MVC, Python + Tornado, Ruby on Rails, JavaScript + NodeJS + Angular, Meteor (using Blaze as the frontend technolgy). Some technologies were more and some were less “developer friendly”. If I were to sum up what technolgies were the most fun to use I would say: RoR and JavaScript frameworks. MetorJS was a bit more fun, but NodeJS + Angular + MongoDB is something more solid, and still used even today (apart from the fact that teams are migrating from Angular 1.x). C# + ASP.NET/ASP.NET MVC were a bit less fun, altghough ASP.NET MVC was much better and I liked it a lot more than classic ASP.NET. What I didn’t particularly like about MS tech stack was that it was more of a blob than just language + technology stack. What I mean is that it is rather impossible to create something more complicated NOT using Visual Studio. Generators (as yeaoman, rake etc.) were not available at that time, so there was not a chance to use something else for working with code than Visual Studio. Everything was IDE driven. If there was a need to add additional fields to a database, or create new tables - all these actions were invoked from withing the IDE. It was so much different to the approach I could take develiping applications with pure JavaScript or Ruby. Having powerfull command line tools I felt I had more control over the process of application development. And I also had the feeling that I understood better what is happening and why.<br>So - the first thing would be “openess” or simply - technology being open source. Or even free - in terms of leaving all the decisions to the user.</p>
<h2 id="Scalability">Scalability</h2><p>My personal opinion is that web applications are facing different problems that 10 years ago. Succesful applications right now often get extremely popular in a very short time. This means that it is important to design application with scalability in mind. And that is not so easy. The number of problems one has to face when it comes to designing scalable app is huge: beginning with responsiveness of the frontend itself, scalability of the workers, session management, and (probably the most complicated) picking up proper approach related to data storage. These are all non trivial problems. </p>
<p>Elixir is based on Erlang virtual machine. Erlang on the other hand is a language developed in 1986 by Swedish company Ericsson. Erlang was born alltogher with OTP - Open Telecom Platform - which was used to to control switches (as far as I understand at the beginning the aim was to control and connect phone calls). Erlang is being described as general purpose, concurrent, fault-tolerant &amp; functional programming language. The concurrency in Erlang is achieved by using actor model, which is extremely interesting concept. In short - Erlang is capable of spawning hundreds or even mant thousands of processes in a very short time. These processes are much lighter than OS processes, and are controlle by Erlang VM. Important thing is that Erlang comes with a lot of tooling for controlling processes. Elixir as a language based on Erlang benefits from all that.</p>
<p>As I see it nowadays - scalability becomes more and more important in the are of web applications development. Elixir seems like a perfect fit here. Why not Erlang itself? Well - partially because Elixir syntax seems more appealing to me.  </p>
<h2 id="Functional_Programming">Functional Programming</h2><p>I have a strong feeling that functional programming is one of the most important concepts that each and every developer should deeply grasp. I was taking some Scala and Haskell courses back in the past, but I lacked a proper “battlefield” to test my knowledge. I want to make an effort this year and develop my skills in the area of functional programming. What better opportunity than creating an application using functional programming language?</p>
<h2 id="Mature_technology">Mature technology</h2><p>I have already mentioned that the technology Elixir is based was created back in the 1986. It means that it is more than 30 years old. Quite a lot of time to prove its maturity.</p>
<h2 id="Friendly_community">Friendly community</h2><p>What is unique in Ruby community is its openness and friendliness. I had zero problems solving problems I bumped on, when developing my RoR applications. A lot of resources are available, and people in general are very happy to help someone who is not familiar with the technology.<br>I have the feeling that the same is true about Elixir community. Maybe it is due to the fact that a lot of people who are interested in Elixir have Ruby background, but I am not sure if this is the (only) case. </p>
<h2 id="Hype">Hype</h2><p>Hype may not be the best word… I have a strong feeling that there is a lot of interest in Elixir. Not only from the developers but also from companies. More and more companies are evaluating Elixir and check if it is a good fit for their needs. I see a constant rise in interest of hiring people who are familiar with Elixir. And this interest is no longer only from the companies located on the West Coast of US - there are more and more companies using Elixir located in Europe. I treat the whole adventure as an investment for the future.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In my first blognote related to this years edition of “Get Noticed” I have mentioned that I am planning to develop web application using 
    
    </summary>
    
      <category term="get-noticed-2017" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/"/>
    
    
      <category term="programming" scheme="http://maciektalaska.github.io/tags/programming/"/>
    
      <category term="Elixir" scheme="http://maciektalaska.github.io/tags/Elixir/"/>
    
      <category term="my opensource projects" scheme="http://maciektalaska.github.io/tags/my-opensource-projects/"/>
    
  </entry>
  
  <entry>
    <title>Get Noticed 2017 - start!</title>
    <link href="http://maciektalaska.github.io/2017/03/03/get-noticed-2017-start/"/>
    <id>http://maciektalaska.github.io/2017/03/03/get-noticed-2017-start/</id>
    <published>2017-03-03T20:32:23.000Z</published>
    <updated>2017-03-05T22:33:44.729Z</updated>
    
    <content type="html"><![CDATA[<p>Some as last year - this year another edition of “Get Noticed” initive is being started. The whole idea is quite simple - to blog about a project - software that will be developed during the next couple of months (all starts beginning of March 2017, ends in May). </p>
<p>Last year I tried to take part in it, but due to some unpredicted things happening - I was not able to devote enough time for it, and didn’t manage to finish the application. I hope this year is going to be different and that I will be able to share quite a lot of thoughts &amp; decisions related to application development.</p>
<p>My idea for the application is still the same - I want to create a simple web application that will allow people to share links to interesting resources. That’s it. Simple stuff. I hope that as time goes by I will implement more and more features for that.</p>
<p>So… as the idea for the application itself stays the same as last year - you may want to read a post about it from last year: <a href="/2016/03/17/Let-them-know-you/">Let them know you</a> </p>
<p>One thing is changing this year though - I have picked different language (or should I actually say - technology stack?). Last year my choice was to use Ruby+Rails. I was a total newbie with Rails&amp;Ruby at that time, and apart from going through some tutorials I haven’t created any application on my own using RoR. </p>
<p>So what’s my techonlogy of choice this year? Wel… this year it is going to be Elixir+Phoenix. I haven’t made any other decisions yet. I am not sure what storage I am going to use. I am not sure if I am going to use ReactJS, AngularJS, VueJS or any other fancy technology for the frontend itself, or if I leave it as a pure Phoenix frontend. I hope to make all that decisions while developing the application, and will try to document my choices here - on my blog.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Some as last year - this year another edition of “Get Noticed” initive is being started. The whole idea is quite simple - to blog about a
    
    </summary>
    
      <category term="get-noticed-2017" scheme="http://maciektalaska.github.io/categories/get-noticed-2017/"/>
    
    
      <category term="programming" scheme="http://maciektalaska.github.io/tags/programming/"/>
    
      <category term="Elixir" scheme="http://maciektalaska.github.io/tags/Elixir/"/>
    
      <category term="my open source projects" scheme="http://maciektalaska.github.io/tags/my-open-source-projects/"/>
    
  </entry>
  
  <entry>
    <title>Let them know you!</title>
    <link href="http://maciektalaska.github.io/2016/03/17/Let-them-know-you/"/>
    <id>http://maciektalaska.github.io/2016/03/17/Let-them-know-you/</id>
    <published>2016-03-17T22:13:18.000Z</published>
    <updated>2016-03-19T16:04:39.798Z</updated>
    
    <content type="html"><![CDATA[<p>Interesting idea has spread in Poland among software developers recently - it is called “Let them know you” (“Daj się poznać” in Polish). It is all about developing an open-source project, and blogging about it for ~3 months (roughly twice a week).</p>
<p>I thought that as I don not have a lot of time - it is the best idea to join it!</p>
<p>Couple of years ago, I was working for a company which had a very cool thing happening - it was called “Something new, something interesting, something cool”. It was a weekly digest emails containing links to articles, blog notes etc. which were found interesting/worth sharing by some developers. These links were then put into an email by one person, and sent to all interested within the company.</p>
<p>I was so bought by this idea that I have even started doing this on my own in one of the companies I was working next. At some point I have realized that doing it all manually was the biggest disadvantage of the whole idea. I happened to forgot about including some links. I have also forgtten couple of times to send the email…</p>
<p>There were also other problems:</p>
<ul>
<li>there was no easy way to search through all the links that have been sent</li>
<li>newcomers were usually not aware of this initiative at all - someone had to tell them about it</li>
<li>when a new person wanted this email digest to be send to them - I had to update the distribution list… again a 100% manual process</li>
</ul>
<p>Taking all these things under consideration - myself and my friend Cyryl(github: <a href="https://github.com/cyplo" target="_blank" rel="external">https://github.com/cyplo</a> blog: <a href="https://blog.cyplo.net" target="_blank" rel="external">https://blog.cyplo.net</a>) started thinking about starting a project that would solve some of those problems. In the end of 2014 we have created a scaffolding of the Ruby on Rails project, but… after the initial couple of commits we have ‘forgotten’ about it, and for about a year we haven’t contributed to it at all. Recently I have decided to resurect the project, and push it forward. And the “Let them know you” initiative seems to be the perfect opportunity to be more devoted in working on the project.</p>
<p>The github repository is located under the following location: <a href="https://github.com/curalink/curalink" target="_blank" rel="external">https://github.com/curalink/curalink</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Interesting idea has spread in Poland among software developers recently - it is called “Let them know you” (“Daj się poznać” in Polish).
    
    </summary>
    
      <category term="my open source projects" scheme="http://maciektalaska.github.io/categories/my-open-source-projects/"/>
    
    
      <category term="let them know you" scheme="http://maciektalaska.github.io/tags/let-them-know-you/"/>
    
      <category term="curalink" scheme="http://maciektalaska.github.io/tags/curalink/"/>
    
  </entry>
  
  <entry>
    <title>AngularJS 2 workshop</title>
    <link href="http://maciektalaska.github.io/2016/03/06/AngularJS-2-workshop/"/>
    <id>http://maciektalaska.github.io/2016/03/06/AngularJS-2-workshop/</id>
    <published>2016-03-06T17:08:41.000Z</published>
    <updated>2016-03-06T18:06:31.298Z</updated>
    
    <content type="html"><![CDATA[<p>Last Saturday I have attended AngularJS 2.0 workshop organized in Wrocław. The event has been organized by DevMeetings (<a href="http://devmeetings.pl" target="_blank" rel="external">http://devmeetings.pl</a>), started ~9 am and finished rougly 6 hours later.</p>
<p>Hosts were employees of LiveChat (<a href="https://www.livechatinc.com/" target="_blank" rel="external">https://www.livechatinc.com/</a>). One of them - Wojciech Kwiatek - gave a talk on AngularJS2 based on their experience at one of the local tech groups. LiveChat decided to switch to AngularJS2 couple of months ago - even though AngularJS2 was not stable at all at that time (they have jumped on the AngularJS2 bandwagon when the whole thing was still in alpha!). It seems they are still pretty happy with the decision. I know that they have been looking at ReactJS as well, but decided that ReactJS may not fit that well into their usecase, and they would need to create a framework from many libraries on their own - so the ‘completeness’ of AngularJS2 was also important.<br>It was great that hosts had real experience with AngularJS2, and not only “played with it” at home :)</p>
<p>Two skeletons of the apps were prepared - one using gulp, and the other utilizing webpack. If you would like to have a look, the webpack version is freely available on github: <a href="https://github.com/wkwiatek/angular2-webpack2" target="_blank" rel="external">https://github.com/wkwiatek/angular2-webpack2</a></p>
<p>The whole agenda was as follows:</p>
<ol>
<li>Introduction to AngularJS2</li>
<li>Components</li>
<li>Events</li>
<li>Pipes</li>
<li>Services and Dependency Injection</li>
<li>Forms</li>
<li>Http+Rx.js</li>
<li>Routing</li>
</ol>
<p>It was quite a lot of stuff (mostly brand new to most of the attendees) and I don’t think a single person has managed to finish all the tasks. I have personally go through the first 6 of them, but haven’t touched Http+Rx.js &amp; routing at all.</p>
<p>I especially liked how forms are implemented in AngularJS2 - that is a common thing for web developers to create, and it is not of minor importance. We had interesting discussion on forms in ReactJS at one of the last local tech group meetings. Yes… forms are things you just can’t escape from :)</p>
<p>What I lacked a bit was how to structure the whole application. I have spotted that many attendess just took the “finished? go with the next task” approach, and had most of the code in single .ts file. I just wanted to avoid that, and spend some more time on re-structuring the application, so I had everything (classes, components) in separate files.</p>
<p>Summary:<br>I am happy I have attended the event. I only read about AngularJS2 before, and apart from tiny snippets, I have not written any AngularJS2 code. This was the best opportunity to get more familiar with the technology, create something bigger, and get the ‘feeling’ of the new, upcoming and technology.</p>
<p>The event was another opportunity to do some more coding in TypeScript. I am not sure if I like it or not… on one hand it seems to mee just too much of a ‘C# for JavaScript developers’ type of approach, I realize that there is additional effort required to have type definition for all the libraries you use. But on the other hand - I think that TypeScript may allow for further improvements of JavaScript performance (thanks to type annotations and optimizations that could be possible to achieve thanks to it).</p>
<p>Thanks to Wojciech Kwiatek, his friend from LiveChat (sorry, forget the name) and DevMeetings team for making this event happen!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Last Saturday I have attended AngularJS 2.0 workshop organized in Wrocław. The event has been organized by DevMeetings (&lt;a href=&quot;http://d
    
    </summary>
    
      <category term="workshop" scheme="http://maciektalaska.github.io/categories/workshop/"/>
    
    
      <category term="programming" scheme="http://maciektalaska.github.io/tags/programming/"/>
    
      <category term="AngularJS" scheme="http://maciektalaska.github.io/tags/AngularJS/"/>
    
      <category term="AngularJS2" scheme="http://maciektalaska.github.io/tags/AngularJS2/"/>
    
      <category term="TypeScript" scheme="http://maciektalaska.github.io/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>My personal rant against GeekWeekWro</title>
    <link href="http://maciektalaska.github.io/2016/03/05/My-personal-rant-against-GeekWeekWro/"/>
    <id>http://maciektalaska.github.io/2016/03/05/My-personal-rant-against-GeekWeekWro/</id>
    <published>2016-03-05T08:33:25.395Z</published>
    <updated>2016-03-05T08:33:25.383Z</updated>
    
    <content type="html"><![CDATA[<p>Last year the first edition of the GeekWeekWro (<a href="http://geekweekwro.pl" target="_blank" rel="external">http://geekweekwro.pl</a>) iniative has taken place in Wroclaw. I wasn’t really bought by it, and the same is this year - I don’t understand what is the point of having it (having GeekWeekWro).</p>
<p>I have couple of doubts, qestsions regarding this idea: </p>
<ol>
<li>What is the purpose? What is the aim of it?</li>
<li>What extra value does that bring? What does it improve within local tech-communites?</li>
</ol>
<p>The answer for the 1st question is… “I don’t know”. Even worse, you won’t find <em>any</em> goals of it on its own website (date: 3rd of March, 2016). The only thing you can find is as follows (translation from Polish by me): </p>
<blockquote><p>GeekWeekWro #2 to tydzień pełen wiedzy, technologii i przede wszystkim zabawy!<br>Od 11 do 16 kwietnia 2016 po raz drugi będziecie mogli wziąć udział w spotkaniach grup, które działają we Wrocławiu! </p>
<footer><strong>GeekWeekWro #2,</strong><cite><a href="http://geekweekwro.pl" target="_blank" rel="external">geekweekwro.pl</a></cite></footer></blockquote>
<p>Translation:</p>
<blockquote><p>GeekWeekWro #2 - a week full of knowledge, technology, and more importantly - fun!<br>During the week of 11 - 16 of April 2016, you will have the chance to take part in tech group meetings in Wroclaw!</p>
</blockquote>
<p>Well… that’s all true, but… can’t we take part in the tech group meetings in other months? When no GeekWeekWro is on schedule? Well… sure you can! Most of active group participants are doing it thorough all the year!<br>So… there is nothig that GeekWeekWro improves. There is no gain for the community. There is nothing ‘extra’ that happens during this ‘special’ week.</p>
<p>Unfortunately, there is one thing that GeekWeekWro makes worse: it introduces clashes between events. </p>
<p>(Sidenote):<br>When I settled down in Wroclaw in 2012, there were not many actively functioning tech groups. I was complainig a bit about it, but someone told me to put some effort and improve the situation. Since then I have been active member (and co-organizer) of the .Net group (I have given several talks), together with my friend Adam I have started AngularJS group (I am still main organizer), I am founder and leader of the functional programming group and I co-organize local Go Language group. I am not putting all these things in here to show you how awesome I am - I just want to point that in the area of how local tech communities work - I know what I am talking about.</p>
<p>Let’s get back to the problem of clashing events. As an organizer I tried hard to avoid situation when the newly started group will clash with another one (that is probably more established already). I know that others (organizers) are thinking alike. Why would we put people in a position of choosing between attending meeting of group A vs attending meeting of group B if this is not necessary? I would like everyone to have opportunity to show up on as many events as possible. It should all be only personal limit, not something that myself (other organizers) are doing on purpose.</p>
<p>So, if you think about cramming many events during a single week - it is obvious that there will be no choice, but to choose which event to give up from. Is that the goal of the GeekWeekWro? To limit, to restrict people from attending many events during the month that GeekWeekWro takes place? If so - well… job well done!</p>
<p>I don’t see any way as how to improve this situation. In my opinion the whole idea is flawed. I don’t see any benefits of GeekWeekWro, but I can easily see disadvantages of having it. I clearly see how it negatively affects local community, and makes things worse than usual. I hope it will not get very popular (and I hope for it only because I want to be able to attend as many events as I usually do). The groups I am the main organizer of will definitely <em>NOT</em> join this initiative. And I am more than certain, that some others share my views and will thank me for that (for not introducing even more clashes between events).</p>
<p>I have discussed ‘the problem of GeekWeekWro’ briefly during the last meeting of the local Python group. My friend Paweł suggested that it could have been much better idea to have several groups meeting in one place, each group giving 1 talk only. That could help integrate local community much better than what GeekWeekWro is currently doing.<br>Unfortunately, I still can see couple of problems:</p>
<ul>
<li>how to create ‘packs’ of groups? Matching JS/front-end focused with Go/.Net/Java - will that work for everyone?</li>
<li>when to meet? For some people some days are simply ‘no-go’ days. In case there are many groups having a meeting on this particular ‘no-go’ day - such a person will not be able to attend a single event out of x they ususally attend</li>
<li>can we prepare such ‘joined’ events in such a way so that these are interesting for many people?</li>
<li>some groups are quite popular, and you may easily expect 50+ people attending - what if there are 4 groups meeting at the same place, same time? How do we find venue(s) for such meetings? It seems to mee that mostly due to this fact, this is not something we may organize.</li>
</ul>
<p>Besides - do we really need this kind of event to ‘integrate local tech groups’? Most of the groups are easy to find on meetup. If someone thinks some particular group could be of her/his interest - there is no other option as to go and check for yourself. That’s it. You don’t need GeekWeekWro for that. You don’t need GeekWeekWro, so that people unaware of existence of such groups will read about ‘how many tech oriented groups we have in Wrocław’. That is a pure nonsense. Anyone from the IT industry must have heard about local communities - either from work mates, colleagues, or via electronic channels. Those who are unaware - are probably not the target anyway.<br>And hearing in the ‘news’ or reading about tech groups on websites that have nothing to do with tech community - is this of any value? For the community?</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Last year the first edition of the GeekWeekWro (&lt;a href=&quot;http://geekweekwro.pl&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://geekweekwro.pl&lt;/a&gt;)
    
    </summary>
    
      <category term="events" scheme="http://maciektalaska.github.io/categories/events/"/>
    
    
      <category term="thoughts" scheme="http://maciektalaska.github.io/tags/thoughts/"/>
    
      <category term="community" scheme="http://maciektalaska.github.io/tags/community/"/>
    
      <category term="GeekWeekWro" scheme="http://maciektalaska.github.io/tags/GeekWeekWro/"/>
    
      <category term="meetup" scheme="http://maciektalaska.github.io/tags/meetup/"/>
    
  </entry>
  
  <entry>
    <title>TestFest conference 2016</title>
    <link href="http://maciektalaska.github.io/2016/02/25/TestFest-conference-2016/"/>
    <id>http://maciektalaska.github.io/2016/02/25/TestFest-conference-2016/</id>
    <published>2016-02-25T20:22:07.000Z</published>
    <updated>2016-03-05T10:05:23.375Z</updated>
    
    <content type="html"><![CDATA[<p>On the 20th of February 2016 I have attended a TestFest conference ([PL] <a href="http://www.testfest.pl" target="_blank" rel="external">http://www.testfest.pl</a>). It was targeted at testers/QAs working in IT industry. I am not one of them ;) but as my friends were organizing the whole event, and they let me know about it - I decided to take part in it.</p>
<h3 id="Epic_Battle:_Zombies_vs_Mutants_(Mutation_testing)_by_Tomasz_Dubikowski">Epic Battle: Zombies vs Mutants (Mutation testing) by Tomasz Dubikowski</h3><p>It was the best talk of the whole conference from my perspective. It was not only a great introduction into mutation testing, but also very funny talk. Tomasz is great at presenting concepts. If you ever wandered what mutation testing was - you should definitely watch Tomasz’s talk (it is not available to watch yet). In my opinion the biggest gain there was that Tomasz made sure to present the whole concept on the very well though of example(s). In my opinion it was huge part of the success of this talk. I have watched several talks about mutation testing so far, but not many were close to the quality of the talk given by Tomasz. If you seem to struggle to understand the whole concept of mutation testing - I would strongly advise you to spend ~hour of your life watching Tomasz Dubikowski’s talk. Trust me - it will be time well spent.</p>
<h3 id="Other_Talks">Other Talks</h3><p>Some other talks were mainly adressed to testers (or as Tomasz put that - QA Evangelists :) There were interesting talks on how to test the hardware to be sent into space (small satellites), how big companies from the telco industry make sure that what they develop could cope with high traffic. </p>
<p>Some other talks were not that interesting for myself (please mind: I am a developer) - for example I haven’t gained much from the talk that focused on the need of understanding of RDBMSs for QA person. Everything was already known to me. What stroke me though, was that it seems the “marriage” between QAs and Devs are still… challenging relationships :) I think most of the problems (technical ones) QAs have when aiming at testing particular application are due to the fact that they get very little (if any) help from developers. Yes - we, developers - are to be blamed here.<br>That is pretty much surprising, as we all should have a feeling that the success is only possible if we all make an effort to build the product of the best quality possible. So - lesson for us - developers - we should be more open, and more willing to share our knowledge with QAs.</p>
<p>I have missed two last talks: </p>
<ul>
<li>“Wyzwania w automatyzacji WebDriver” (Challenges in WebDriver automation) by Tomasz Fajks, Tomasz Bień</li>
<li>“Narzędzia do zautomatyzowanego testowania bezpieczeństwa aplikacji WWW” (Tools for automated security testing for web applications) - by Borys Łącki</li>
</ul>
<p>I hope that videos will be available on the TestFest’s youtube channel (<a href="https://www.youtube.com/channel/UCsDeChNGyDDHTevmoC3DrEQ" target="_blank" rel="external">https://www.youtube.com/channel/UCsDeChNGyDDHTevmoC3DrEQ</a>) soon.</p>
<h3 id="Workshop_(errors_prediction)">Workshop (errors prediction)</h3><p>I have missed the 2 talks mentioned above only because I have decided to join one of the workshops, namely the one entitled: “Predykcja elementów błędogennych w kodzie w praktyce” (Prediction of error causes in practice) - by Jarosław Hryszko. I had no expectations for this workshop whatsoever, but I thought that I know nearly nothing about the subject, so there was a high chance for myself to learn something. And I must say I wasn’t wrong with my reasoning ;)</p>
<p>Have you ever heard of KNIME (<a href="http://knime.org" target="_blank" rel="external">http://knime.org</a>) ? I have not heard about it as well :) So this is Eclipse based tool that allows you to create workflows for data analysis (as I understand). The great power of this solution comes from available “boxes” (components) that are ready to use. These are of different kinds:</p>
<ul>
<li>data input (reading from various files)</li>
<li>data transformation (different techniques/algorithms are available)<br>The outcome of the whole workflow is mathematical model, that could be later on used to process another set of data. </li>
</ul>
<p>At the beginning we were all given a very short introduction to the KNIME platform. Jarosław explained how to create workflows, how to connect elements (boxes/components) together, how do we make sure there are no errors etc. Jarosław mentioned that the tool is so easy, that everyone who is capable of using a mouse should be able to use.<br>The last part of the workshop was the most challenging one. Jarosław explained us the real power behind KNIME - ability to create models based on the data provided, and analyzing data with the help of the models.</p>
<p>So… is there any possibility to predict where errors in code could/would occur? The only technique I knew so far was as follows:</p>
<ul>
<li>gather system statistics (especially focus on measure cyclomatic complexity and similar code metrics)</li>
<li>gather data on which particular files in the repo are the ones that are being changed most often</li>
</ul>
<p>Create a 4 section box, having following groups:<br>a) complicated, frequently changed<br>b) complicated, infrequently changed<br>c) non-complicated, frequently changed<br>d) non-complicated, infrequently changed</p>
<p>Those components/source files that belong to the ‘A’ group are those who are most likely to have new bugs introduced in. Those in the ‘B’ group, probably are buggy (or were buggy) and we should make sure that we test them properly. ‘C’ group contains code which is usually frequently changed due to changing requirements, but if not many errors were introduced so far - we should not worry about this group as much as of ‘A’ &amp; ‘B’. The last area is the one that is of the least importance (from the perspective of possibility of new bugs being introduced).<br>That approach should not be anything new for anyone who spotted the correlation between frequent changes &amp; code complexity and number of bugs found in particular source files.</p>
<p>What Jarosław demonstrated was much more sophisticated. There were 3 requirements:<br>a) code metrics<br>b) history of bug fixes (based in Jira, if I remember correctly)<br>c) data from repository (frequency of changes - if I recall)</p>
<p>After the model was created it would be possible to have another code metrics applied as input for the workflow, and get prediction on which parts of the application code are very vulnerable to bug introduction. That approach literaly blew my mind out.</p>
<p>Of course, this requires a lot of discipline (input data - this is not something you can ‘borrow’ from someone else - another team/company). The other thing that could be a bit of a problem is: what happens if team gets changed: new people join and some other leave the team? The overall experience of the team changes. That could definitely impact the structure of the code, and its quality.</p>
<p>Anyway, I think it was very well spent ~2 hours. I may not use this technique, but being aware of such an approach is (in my perspective) a real eye-opener.</p>
<p>Jarosław’s bio [PL]: <a href="http://www.testfest.pl/wordpress/?page_id=973" target="_blank" rel="external">http://www.testfest.pl/wordpress/?page_id=973</a><br>Jarosław’s home page (including some materials we have used during the workshop): <a href="http://hryszko.net/" target="_blank" rel="external">http://hryszko.net/</a><br>KNIME tool: <a href="http://knime.org" target="_blank" rel="external">http://knime.org</a></p>
<h3 id="Summary">Summary</h3><p>So even though TestFest was not target at developers, I definitely think it was worth to spend whole Saturday in the building of the local Technical University. I have had a chance not only to get to know some interesting personas, but also learned couple of things.<br>I have meet with my colleagues (organizing the event) later in the evening at the after party, and we have spent good couple of hours discussing different topics (not all related to IT at all), enjoying good food and beverages.</p>
<p>Do I plan to show up on TestFest next year? Definitely. I hope I will meet some of the people I meet the next year as well!</p>
<p>Please note, that talks, conference site etc. are in Polih only.<br>TestFest conference site [PL]: <a href="http://www.testfest.pl" target="_blank" rel="external">http://www.testfest.pl</a><br>TestFest conference YouTube channel [PL]: <a href="https://www.youtube.com/channel/UCsDeChNGyDDHTevmoC3DrEQ" target="_blank" rel="external">https://www.youtube.com/channel/UCsDeChNGyDDHTevmoC3DrEQ</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;On the 20th of February 2016 I have attended a TestFest conference ([PL] &lt;a href=&quot;http://www.testfest.pl&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;
    
    </summary>
    
      <category term="conference" scheme="http://maciektalaska.github.io/categories/conference/"/>
    
    
      <category term="software quality" scheme="http://maciektalaska.github.io/tags/software-quality/"/>
    
      <category term="testing" scheme="http://maciektalaska.github.io/tags/testing/"/>
    
  </entry>
  
  <entry>
    <title>Management 3.0 &amp; moving motivators</title>
    <link href="http://maciektalaska.github.io/2016/02/18/Management-3-0-moving-motivators/"/>
    <id>http://maciektalaska.github.io/2016/02/18/Management-3-0-moving-motivators/</id>
    <published>2016-02-18T21:18:19.000Z</published>
    <updated>2016-03-04T22:34:08.755Z</updated>
    
    <content type="html"><![CDATA[<p>Couple of days ago I had a chance to attend first meeting of the newly created group focusing on “Management 3.0”. My understanding was that it was planned to talk about the burn-out and motivation for work, but it turned out that this has been slightly changed.</p>
<p>After the introduction we started talking about our expectations regards the group and the meetings. It was great, as I had a very little knowledge of what the Management 3.0 is all about (and there were others who knew a lot more in this area than myself).</p>
<p>At some point we have started discussing work motivation factors, and Piotr - event host - introduced the concept of “moving motivators”. As Piotr explained - there were some psychological studies and it seems that there are 12 main motivators: but as 2 of them refer to very personal area (family &amp; sex relationship) we have focused on the remaining 10. Piotr has prepared a card pack for each attendee. The pack contained following cards:</p>
<ul>
<li>curosity (I have plenty of things to investigate and to think about)</li>
<li>maestry (My work challenges my competence but it is still within my abilities)</li>
<li>relatedness (I have a good social contact with the people in and around my work)</li>
<li>status (My position is good, and recognized by the people who work with me)</li>
<li>goal (My purpose in life is reflected in the work that I do)</li>
<li>power (There’s enough room for me to influence what happens around me)</li>
<li>order (There are enough rules and policies for a stable environment)</li>
<li>honor (I feel proud that my personal values are reflected in how I work)</li>
<li>acceptance (The people around me approve of what I do and who I am)</li>
</ul>
<p>We have briefly discusses the meaning of cards. What was surprising that many of us had different thoughs about the very same card(s).</p>
<p>Later Piotr asked us to put the cards in the following order:</p>
<ul>
<li>pick 3 which are the most important</li>
<li>pick 4 that are also important, but not as important as the first 3</li>
<li>pick 3 that are least important for us</li>
</ul>
<p>It is all important in regards of picking new work. If 2 out of 3 “most important” things will actually be lower in new place - is this a good choice?</p>
<p>Another thing that Piotr mentioned was that it was important to take a photo of the order of the cards. Why? As our thinking of “what is the most important for me” changes through time. So it could be interesting to see how our approach to career/motivation goals change.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Couple of days ago I had a chance to attend first meeting of the newly created group focusing on “Management 3.0”. My understanding was t
    
    </summary>
    
      <category term="events" scheme="http://maciektalaska.github.io/categories/events/"/>
    
    
      <category term="thoughts" scheme="http://maciektalaska.github.io/tags/thoughts/"/>
    
      <category term="self development" scheme="http://maciektalaska.github.io/tags/self-development/"/>
    
      <category term="management" scheme="http://maciektalaska.github.io/tags/management/"/>
    
      <category term="career" scheme="http://maciektalaska.github.io/tags/career/"/>
    
  </entry>
  
  <entry>
    <title>Acodemy.io - AngularJS &amp; WebComponents workshop</title>
    <link href="http://maciektalaska.github.io/2016/02/05/Acodemy-io-AngularJS-and-WebComponents-workshop/"/>
    <id>http://maciektalaska.github.io/2016/02/05/Acodemy-io-AngularJS-and-WebComponents-workshop/</id>
    <published>2016-02-05T18:13:18.000Z</published>
    <updated>2016-03-05T08:52:18.783Z</updated>
    
    <content type="html"><![CDATA[<p>Last Saturday I had a chance to join couple of folks from Wroclaw and take part in the AngularJS+WebComponents workshop. The whole event has been run by the 10Clouds(<a href="http://10clouds.com" target="_blank" rel="external">http://10clouds.com</a>) - interesting IT company from Warsaw which specializes in modern solutions (made mainly using JavaScript, Php and Python).</p>
<p>I have had a chance to work with AngularJS and that’s why I was more interested in WebComponents part of the workshop. I have done some reading before the workshop on WebComponents, so I had a bit of understanding what these beasts are, but I have never created one myself :)</p>
<p>What I liked about the event is that I get much better understanding of the WebComponents. I haven’t had a chace to use them before. I was not sure what the difference between WebComponents and Polymer library was. Right now I know, that the aim of Polymer is to make using WebComponents a bit easier. Unfortunately, from the talks I had with some of the devs who already done some effort and used WebComponents I realized that Polymer is not yet ready to be used in production environment. Polymer still has no stable version, but its API has been greatly changed, and many breaking changes have been introduced some time ago. So for myself, the take-way was: WebComponents are definitely the future of web development (front-end), but at the moment Polymer is not ready to be used in production quality applications.</p>
<p>I think that the event was very well prepared. We have started with pure AngularJS application (let’s say it was a Spotify clone) and then slowly made some improvements/changes to it. It was very interesting to see how WebComponents could be used from withing AngularJS application. Some steps were quite complicated, and that was the moment when asking the mentor about help was the best decision.</p>
<p>The great thing about the event was that the company did not hide its aim: become better known in Wrocław, as they are about to expand their local office (at the time of writing it, the employed only ~3 devs in Wrocław). They way they approached their goal was awesome: no posters all over the town, no “conference” (usually such events are not of high quality) - but organizing something that is a huge challenge, an event that participants can benefit a lot from. Personally, I think this is the very best way to attract people to start working for a newly settled down company.</p>
<p>The other great thing was that there was a possibility to talk to couple of developers already working for 10Clouds (they were mentoring groups during the event). So if anyone had any question in regards how the company works, what kind of project do they usually work on, what is their approch to forming teams, how do they organize their work in terms of the methodology - all these (and many more) questions could be easily answered either during the meeting or during the after party.</p>
<p>10Clouds - thank you for making it all happen!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Last Saturday I had a chance to join couple of folks from Wroclaw and take part in the AngularJS+WebComponents workshop. The whole event 
    
    </summary>
    
      <category term="workshop" scheme="http://maciektalaska.github.io/categories/workshop/"/>
    
    
      <category term="programming" scheme="http://maciektalaska.github.io/tags/programming/"/>
    
      <category term="AngularJS" scheme="http://maciektalaska.github.io/tags/AngularJS/"/>
    
      <category term="WebComponents" scheme="http://maciektalaska.github.io/tags/WebComponents/"/>
    
      <category term="Polymer" scheme="http://maciektalaska.github.io/tags/Polymer/"/>
    
  </entry>
  
  <entry>
    <title>Ugly fonts in Java apps under Linux</title>
    <link href="http://maciektalaska.github.io/2016/02/05/Ugly-fonts-in-Java-apps-under-Linux/"/>
    <id>http://maciektalaska.github.io/2016/02/05/Ugly-fonts-in-Java-apps-under-Linux/</id>
    <published>2016-02-05T16:19:55.000Z</published>
    <updated>2016-02-05T17:56:42.759Z</updated>
    
    <content type="html"><![CDATA[<p>What strikes me from time to time is that under Linux all works well… after you spend some time searching for ways to fix things, and make them work <em>exactly</em> the way you want them too.</p>
<p>I am really picky when it comes to the UI. I love command line and console, but as I do work a lot with written words… quality of fonts rendering is <em>extremely</em> important for myself. </p>
<p>I am learning RoR at the moment. I’ve been doing quite some coding recenlty using pure VIM, but decided to give RubyMine a try. RubyMine is very powerful IDE, but under the default JDK/JRE (no difference if this is OpenJDK or Oracle’s JDK/JRE) the way it renders fonts is just pain to the eyes. Eclipse renders fonts much better (by default) than RubyMine, and NetBeans is as bad as RubyMine is.</p>
<p>I’ve spent a bit of a time trying to configure RubyMine so that it renders fonts as nicely as VIM :) but with no success. I was so desperate on this, that I was planning to either switch to another IDE (but Aptana is no go for me) or to go back to pure VIM again.<br>Fortunately I have found a solution for Debien/Ubuntu:</p>
<p>1) Do not use Oracle’s Java<br>2) Do not use the OpenJDK default repository<br>3) Add the <code>https://launchpad.net/~no1wantdthisname/+archive/ubuntu/openjdk-fontfix</code> as a ppa</p>
<p>Install OpenJDK 7/8 from the repo mentioned in point 3.</p>
<p>If you have other flavors of Java installed, use <code>sudo update-alternative --config java</code> to pick the OpenJDK installed from <code>no1wantdthisname</code> ppa.</p>
<p>That’s it.</p>
<p>And the results? Huge, huge differnce:</p>
<p>Before:</p>
<img src="/2016/02/05/Ugly-fonts-in-Java-apps-under-Linux/rubymine-ugly-fonts.jpg" alt="Ugly fonts in RubyMine" title="Ugly fonts in RubyMine">
<p>After:</p>
<img src="/2016/02/05/Ugly-fonts-in-Java-apps-under-Linux/rubymine-nice-fonts.jpg" alt="nicely looking fonts in RubyMine!" title="nicely looking fonts in RubyMine!">
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;What strikes me from time to time is that under Linux all works well… after you spend some time searching for ways to fix things, and mak
    
    </summary>
    
    
      <category term="configuration" scheme="http://maciektalaska.github.io/tags/configuration/"/>
    
  </entry>
  
  <entry>
    <title>Boiling Frogs conference</title>
    <link href="http://maciektalaska.github.io/2016/01/21/BoilingFrogs-conference/"/>
    <id>http://maciektalaska.github.io/2016/01/21/BoilingFrogs-conference/</id>
    <published>2016-01-21T06:03:20.000Z</published>
    <updated>2016-02-05T16:17:00.443Z</updated>
    
    <content type="html"><![CDATA[<p>Last Saturday (16th of January) I had a chance to take part in the Boiling Frogs 2016 conference. This is not very widely known event - at least I haven’t heard of it before my friend told me couple of weeks ago. Boiling Frogs is organized in Wroclaw, Poland. As far as I remember this year’s edition was <del>the second one</del> (actually I was corrected on that: this was the first edition of the conference). What is interesting is that there is no huge company behind organizers. You may actually say that Boiling Frogs is a community driven event is oranized by people who form community.</p>
<p>I was quite surprised that this event offered three separate tracks of talks. I understand how much of an effort is required to prepare even a single track conference, but three separate tracks… well done Boiling Frogs 2016 organinzers! Each track had a mixture of talks: some focused on very technical aspects of software development, some others more focused on a topics that focus on software from a bit higher perspective (architecture, project management etc.).<br>One important thing to note was that even though most of the presenters had their slides in English, talks were held in Polish only (at least all those that I have attended).</p>
<h3 id="Opening_Talk">Opening Talk</h3><p>Conference started with opening talk by the main organizer: Tomasz Kaczmarzyk. Tomasz told us about the history of the conference, the effort himself, team and friends and family devoted to make this event happened.</p>
<h3 id="Talk_#1_-_“From_legacy_to_DDD”">Talk #1 - “From legacy to DDD”</h3><p>After the opening talk I decided to listen to Andrzej Krzywda (from Arkency) talking about his journey from “Legacy to DDD”. That was a very interesting talk. Andrzej told us a bit of his effort to find the architecture/approach that would help him build software that is most valuable to his customers. It was great to hear how an adoption of some techniques enables developers to think more in terms of business opportunities than in strictly technical manner. Some time ago I was told that pure technical excelency is not that important as being capable of delivering technical solutions, but in the same time understanding business and being able to suggest new features and functionalities.<br>Slide deck from Andrzej’s talk is available online: <a href="http://www.slideshare.net/andrzejkrzywda/from-legacy-to-ddd-5-starting-steps" target="_blank" rel="external">http://www.slideshare.net/andrzejkrzywda/from-legacy-to-ddd-5-starting-steps</a><br>The most important things to take from the talk:</p>
<ol>
<li>Learn ideal DDD - to think about implementing any (part of) system in DDD you should learn the most important concepts first. Obvious, right? :)</li>
<li>Publish events (just in case to be ready to later make further changes to the application code, and benefit from ‘just publishing events’)</li>
<li>Microservices are hot. What they bring on board is requirement to have things done in an async way. The question is: do you and your team have enough knowledge and experience to have it done on your own?</li>
<li>Frameworks are great, but… sometimes you end up being a prisoner of the framework of your choice. It is a good idea to separate framework(s) from the core of your application. Why would framework specific objects leak into the most inner part of your application? Andrzej put a lot of emphgasis on separating network (http) and storage/database layer from the application.</li>
<li>Learn bounded contexts - this is actually the core of your project. It is the most important to have as good understanding of it as possible, that’s why you should think of how to model your ‘world’.</li>
</ol>
<p>I personally love talks like that one. This is the level of understanding how software works (or should be built) that I think is the most important. This kind of perspective requires not only ability to code, not only knowledge of frameworks, but moreover knowledge of some architectural approaches and (maybe most important) experience: a lot of hours ‘wasted’ staring at the code and thinking how to improve that. </p>
<h3 id="Talk_#2_-_“BDD_and_agile_requirements”">Talk #2 - “BDD and agile requirements”</h3><p>The very next talk that I have attended was entitled “BDD and agile requirements”, given by Wiktor Żołnowski. Wiktor is experienced QA and consulant, who helps many companies make sure that the software they create is of acceptable quality.<br>This talk was packed with a lot of stuff:</p>
<ul>
<li>proper approach to define BDD scenarios</li>
<li>introduction to GROW (Goal, Reality, Opportunites, Work) approach</li>
<li>a story of a startup that Wiktor has been advising</li>
<li>introduction to usage of Cynefin (have you <em>ever</em> heard of it before reading it here? no? google it!)</li>
</ul>
<p>It is easy to spot that Wiktor has a lot of experience in advising companies and organizing how teams work. Great talk.</p>
<h3 id="Talk_#3_-_“Paradise_for_polyglots_-_everything_floats”">Talk #3 - “Paradise for polyglots - everything floats”</h3><p>Right before the lunch I have attended interesting talk by Michał Płachta “Paradise for polyglots - everything floats”. This one was aimed at reactive progamming. Michał was showing the audience how to build a simple snake game using reactive approach (so approach based on streams). From the very simple thing (snake and fruit in the same place all the time), Michał went to a full featured version of the game. Just to show that reactive approach could be used on both: frontend and backend (same time) - Michał got to the point of having two different players (snakes) at the same time. Snakes were synced using backend (written in Scala+Akka). It was really impressive talk. I was really inspired by the way such a simple application has been built with the reactive concept in mind. </p>
<h3 id="Lunch">Lunch</h3><p>The lunch was a great opportunity for myself to talk to couple of my colleagues, and to eat some pierogi :) (if you have ever visited Poland, you have surely been offered pierogi, no doubt!).<br>Great time to have another look at the agenda and mark talks that seemed the most interesting.</p>
<h3 id="Talk_#4_-_“Effective_Software_Delivery”">Talk #4 - “Effective Software Delivery”</h3><p>First talk after the lunch that I heard was “Effective Software Delivery” by Jakub Kubryński. Jakub cooperates with Bottega Solutions, and I must say, that I have heard couple of talks by people who work for Bottega, and each time it was time well spent. To me this is now clear - presenter who works for Bottega = high quality of the talk.<br>Back to the talk: Jakub was talking about all the different approaches we take to make sure we can deliver software of high quality. Jakub has also pointed out couple of different approaches that are quite common but result in the development of software of not-so-high quality.<br>One of them was hacking models/database - using columns or properties to enable some additional features: “during this transaction we don’t use the property X, so if this is set to Y…”. Does that sound familiar? Another one: “yes, I agree with you - I’d like to have this feature tested, but trust me, this one is special and you can’t test it”. Scripting? “I know it should be automated, but…”.<br>Another thing that was touched by Jakub: what is the difference between PoC and spike(s)? When should you go with PoC? How do you evaluate technology? Should you trust something just because it prooved useful in a previous project you worked on?<br>Another interesting thing that Jakub touched was the way we build software in general, how we think about it. Is architect a good name for someone who is in charge of technical side of software development? Is building houses really good analogy?<br>Apart from that there were couple of other things mentioned: silverbullets (in terms of technology), praising small changes, knowledge of your tools, scripting and automation of tasks, testing software, DRY (and WET), premature optimization, code inspections and couple of more. For experienced developers some (all?) of the things mentioned should be familiar, but still it was a great summary of techniques to make great quality apps. For not that experienced developers this should be one of the required talks.</p>
<h3 id="Talk_#5_-_“How_to_find_time_for_quality?_Theory_of_queues_and_Little_law’s_in_the_software_development_process”">Talk #5 - “How to find time for quality? Theory of queues and Little law’s in the software development process”</h3><p>The very next talk I went to was another one given by Wiktor Żołnowski: “How to find time for quality? Theory of queues and Little law’s in the software development process”. Originally I wanted to go to my friend’s (Tomasz Pluskiewicz) talk “HATEOS as if you meant it”, but I decided that the previous talk Wiktor gave was so good, and that I have already talked to Tomasz couple of times about HATEOAS that… I have decided to go for the second talk given by Wiktor. His talk started with a simple problem: how to optimize a system. We were thinking about McD-alike “drive-in” system, which  has 3 different stages: placing order, payment and order collection. The trick was that each stage took a different time to be completed. Wiktor has shown couple of simulations using different number of vehicles being in the queue. It was interesting to see that squeezing too much actually makes the whole system performing much worse than we would expect.<br>Taking it from there Wiktor elaborated more about how to improve performance of a team that uses Scrum. He pointed couple of things to consider that are related to work organiation, amount of work planned to be done within a sprint etc.<br>I think that both talks by Wiktor should be attended by all managers in IT. I agree with Wiktor: we do lack managers in IT who have management background (as the common story is that developers are being given a chance to manage and they do it as well as they can). </p>
<h3 id="Talk_#6_-_“Machine_Learning_for_Developers”">Talk #6 - “Machine Learning for Developers”</h3><p>The very last talk that I have attended was “Machine Learning for Developers” by Mariusz Gil. I am not sure, but this may have been the most important talk of all for myself. Why? Simple reason: I had no idea what machine learning was, before entering the room where the talk was given. After ~45 minutes I am still no expert in the area, but at least I have an understanding what machine learning is, where could it (possibly) be applied and what are the things the you should consider when building a machine learning system.</p>
<p>After the conference we have headed to the pub where we had a bit of a disussion on IT, software etc. I came home quite exhausted, but happy, as I considered this day to be a well spent one. I have learned some things, I had a chance to talk to some of my colleagues I know from local tech groups, and make some new acquaintances.</p>
<h3 id="Summary">Summary</h3><p>As for the confenece itself I must say that I like these type of events: organized by smaller group of people. Made with passion and not because there is a business aim, or an opportunity for a company to make its brand better known.<br>Boiling Frogs was one of the events that boost you with energy, that makes you become better in what you do on a daily basis.<br>If there is another Boiling Frogs conference next year to be organized - I will definitely make sure to get a chance to attend it.</p>
<p>I think that 2016 has started very well. I can’t wait for other opportunities for me to develop my knowledge and attend even more interesting events.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Last Saturday (16th of January) I had a chance to take part in the Boiling Frogs 2016 conference. This is not very widely known event - a
    
    </summary>
    
      <category term="conference" scheme="http://maciektalaska.github.io/categories/conference/"/>
    
    
      <category term="Boiling Frogs" scheme="http://maciektalaska.github.io/tags/Boiling-Frogs/"/>
    
  </entry>
  
  <entry>
    <title>Go, Kubuntu, fish-shell &amp; gvm - addendum</title>
    <link href="http://maciektalaska.github.io/2016/01/17/Go-Kubuntu-fish-shell-gvm-addendum/"/>
    <id>http://maciektalaska.github.io/2016/01/17/Go-Kubuntu-fish-shell-gvm-addendum/</id>
    <published>2016-01-17T20:03:54.000Z</published>
    <updated>2016-01-20T05:56:37.828Z</updated>
    
    <content type="html"><![CDATA[<p>There is just one important thing that I have missed in my previous post. It all seems to work ok, but if you restart your machine you quickly realize that the <code>gvm</code> is not available to you anymore. What is the point?<br>Well… this is due to the fact that after a function is created for fish-shell (as in step 2 in previous blog post) it works… but it is not stored for future use. To do that - there is one single thing required - function has to be saved. This will make it persisted, and such a function will be available to you after your machine is restarted. </p>
<p>How to save a function? This is extreemely easy, you just type <code>funcsave &lt;function_name&gt;</code> - in our case (in case of saving <code>gvm</code>) it will be: <code>funcsave gvm</code>. That’s it. </p>
<p>Now if you cd to your <code>~/config/fish/function</code> folder, you will spot the file named <code>gvm.fish</code>. The content of the file is (surprise?) the definition of the <code>gvm</code> function used by fish-shell (step 2 of the previous blog note). </p>
<p>I hope it is now clear </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;There is just one important thing that I have missed in my previous post. It all seems to work ok, but if you restart your machine you qu
    
    </summary>
    
      <category term="programming" scheme="http://maciektalaska.github.io/categories/programming/"/>
    
    
      <category term="fish shell" scheme="http://maciektalaska.github.io/tags/fish-shell/"/>
    
      <category term="Go" scheme="http://maciektalaska.github.io/tags/Go/"/>
    
      <category term="configuration" scheme="http://maciektalaska.github.io/tags/configuration/"/>
    
  </entry>
  
  <entry>
    <title>Go 1.5.x on Kubuntu using fish shell and gvm</title>
    <link href="http://maciektalaska.github.io/2015/11/07/Go-gvm-and-fish-shell/"/>
    <id>http://maciektalaska.github.io/2015/11/07/Go-gvm-and-fish-shell/</id>
    <published>2015-11-07T22:16:08.000Z</published>
    <updated>2015-11-07T23:46:38.433Z</updated>
    
    <content type="html"><![CDATA[<p>I got really interested in Go and I am learning it in my spare time. Unfortunately the verion of Go that is available via Ubuntu repository is very old (at the moment of writing this it was 1.2.x). It was not good enough even for learning purposes.</p>
<p>I wanted to use the very latest version of Go (1.5.x) and started looking for an PPA that would allow me to install the newest version. I quickly found one: <a href="https://launchpad.net/~evarlast/+archive/ubuntu/golang1.5" target="_blank" rel="external">https://launchpad.net/~evarlast/+archive/ubuntu/golang1.5</a> Unfortunately I quickly realized that it may not be the best idea. </p>
<p>What if need to use two different versions of Go? How do I manage them?</p>
<p>The best thing is to use something similar to nvm (NodeJS Version Manager) or RVM (Ruby Version Manager). As I am using fish shell instead of bash, things are a bit more complicated. There are couple of steps required to have Go 1.5.x installed on Linux, and make the whole thing work with fish shell.</p>
<ol>
<li>Install gvm (<a href="https://github.com/moovweb/gvm" target="_blank" rel="external">https://github.com/moovweb/gvm</a>)</li>
<li>Make gvm work with fish shell (<a href="https://github.com/moovweb/gvm/issues/137#issuecomment-131400212" target="_blank" rel="external">https://github.com/moovweb/gvm/issues/137#issuecomment-131400212</a>). You may need to install bass first (<a href="https://github.com/edc/bass" target="_blank" rel="external">https://github.com/edc/bass</a>)</li>
<li><code>gvm install go1.5.x</code> will not work, as Go 1.5.x requires Go 1.4.x for compilation. Install Go 1.4.x first (<code>gvm install go1.4.3</code>)</li>
<li><code>gvm install go1.5.x</code> will fail again, due to the fact that it will be unable to find Go 1.4.x. You will probably see similar error message<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">ERROR: </span>Failed to compile. Check the logs at /home/&lt;username&gt;/.gvm/logs/go-go1.5.1-compile.log</div><div class="line"><span class="keyword">ERROR: </span>Failed to use installed version</div><div class="line">Installing go1.5.1...</div><div class="line"> * Compiling...</div></pre></td></tr></table></figure>
In my case the log content was: <figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">##### Building Go bootstrap tool.                                             </div><div class="line">cmd/dist</div><div class="line"><span class="keyword">ERROR: </span>Cannot find /home/&lt;username&gt;/go1.4/bin/go.</div><div class="line">Set $GOROOT_BOOTSTRAP to a working Go tree &gt;= Go 1.4.</div><div class="line">./make.bash: line 121: /home/&lt;username&gt;/go1.4/bin/go: No such file or directory</div></pre></td></tr></table></figure></li>
<li>Execute the folling commands to help gvm to succesfully compile Go 1.5.x (this is based on the discussion: <a href="https://github.com/moovweb/gvm/issues/155#issuecomment-135855340" target="_blank" rel="external">https://github.com/moovweb/gvm/issues/155#issuecomment-135855340</a>):<br>a) <code>gvm use go1.4.3</code><br>b) <code>set -x GOROOT_BOOTSTRAP $GOROOT</code><br>c) <code>gvm install go1.5.1</code> </li>
</ol>
<p>That should be all fine right now. Go 1.5.x should be installed on your machine (side by side with the Go 1.4.x that was used required to compile the newest version of Go).</p>
<p>Happy coding (in Go!)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I got really interested in Go and I am learning it in my spare time. Unfortunately the verion of Go that is available via Ubuntu reposito
    
    </summary>
    
      <category term="programming" scheme="http://maciektalaska.github.io/categories/programming/"/>
    
    
      <category term="fish shell" scheme="http://maciektalaska.github.io/tags/fish-shell/"/>
    
      <category term="Go" scheme="http://maciektalaska.github.io/tags/Go/"/>
    
      <category term="configuration" scheme="http://maciektalaska.github.io/tags/configuration/"/>
    
  </entry>
  
  <entry>
    <title>Checking out hexo!</title>
    <link href="http://maciektalaska.github.io/2015/08/16/Welcome-to-Hexo/"/>
    <id>http://maciektalaska.github.io/2015/08/16/Welcome-to-Hexo/</id>
    <published>2015-08-16T10:30:08.000Z</published>
    <updated>2015-08-16T21:56:48.434Z</updated>
    
    <content type="html"><![CDATA[<p>I was thinkig for quite some time how to migrate my old blog from Wordpress to some other blogging platform. Couple of reasons why I started thinking of giving up Wordpress:</p>
<ul>
<li>Wordpress is complicated, offers a lot of plugins, and this makes it vulnerable to ‘hacking’ </li>
<li>I don’t think I really need the flexibility that Wordpress offers. I think for me it is just too much. I am not planning to write blog with someone else (so I don’t need platform which supports many authors)</li>
<li>Wordpress requires hosting. And that costs.</li>
</ul>
<p>Some time ago I’ve bumped on couple of people saying that static sites generators are great for blogging purposes. It seemed to me a good idea having my blog hosted on github, so that I can have all the things in one place. </p>
<p>I’ve heard about Jekyll, Nikola, Pelican but I knew there were many more. I had to figure out what my needs are, and after a short while, I came up with the most important features my preferred blogging platform should offer:</p>
<ul>
<li>good support for code snippets (as I will be using this mainly for my programming related blogging)</li>
<li>support for plugins (for example: I want to be able to use disqus for comments)</li>
<li>offering some nice themes, so that I can pick something for the very beginning</li>
</ul>
<p>My workmate suggested me to have a look at Nikola. The installation was easy (I’ve used virtualenv so not to spoil my environment). It took me a bit to have a first blog post in the shape of my desire. In a short time I’ve learned how to work with Nikola. I think Nikola is a great piece of software. I was quite amazed when I discovered how easy it was to install additional theme. It wasn’t much harder to change bootstrap’s based theme (for the bootstrap based themes). All with just providing couple of arguments to Nikola. Although… I wasn’t very happy with Nikola. Mainly because:</p>
<ul>
<li>Nikola is quite slow, re-generating your site takes quite some time. As I was playing with quite many themes, and was doing a lot of tweaking - that was something hard not to notice</li>
<li>I’ve spent some time searching for nice themes, and… I was quite dissappointed. I couldn’t find a nice, easthetic theme, that would render code snippets in a fancy way. Some themes looked better in general, some were not that nice, but rendered code snippets better. All in all I haven’t found one theme I could be happy with. I had a quick look at Pelican (<a href="http://blog.getpelican.com/" target="_blank" rel="external">http://blog.getpelican.com/</a>) (which is another static site generator written in Python) and it seemed to me that Pelican offers nicer themes.</li>
<li>my feeling is that there are not many plugins, and that the community behind Nikola is not very big</li>
</ul>
<p>After my experience with Nikola, I decided to give some others platforms a chance. I’ve made some research, and found a site that lists many static sites generators: <a href="https://www.staticgen.com/" target="_blank" rel="external">https://www.staticgen.com/</a> It is definitelly more than enough. I was amazed how many generators are there. Not only for Python and Ruby, but also for functional languages (Haskell, Scala) and some really exotic languages such as Racket (<a href="https://www.staticgen.com/frog" target="_blank" rel="external">https://www.staticgen.com/frog</a>).<br>One of my thoughts was that I should probably go with Jekyll as it has the biggest community, dozens of themes and plugins. What’s more, I think that in comparison to Nikola, it may be easier to find some articles on how to change things in Jekyll. I was pretty much set for trying Jekyll, when I spotted Hexo (<a href="https://www.staticgen.com/hexo" target="_blank" rel="external">https://www.staticgen.com/hexo</a>).</p>
<p>Hexo is written in JavaScript and uses NodeJS. One of the biggest advantages is Hexo’s popularity: it is ranked 4th when taking github stars. Developers working on Hexo claim it is very fast. And comparing to Nikola… I must say that this is true. Hexo is even easier to set up than Nikola (or maybe it is just me being more fluent with JS stack than Python). If you already have NodeJS on your machine, there is just one package to install. After about a minute I had my “blog” created. Within next couple of minutes I had couple of sample notes, with codeblocks and gists - I decided it looked better than what I was able to create using Nikola. I’ve spent next hour (or two) playing with themes, and making my own modifications of themes. I am pretty happy with what I have achieved so far. There are couple of things I will need to change, but I guess I am good to go with what I have.</p>
<p>Hexo supports codeblocks…</p>
<p>this is how it highlights Python…</p>
<figure class="highlight python"><figcaption><span>somepy</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">import</span> sys </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_func</span><span class="params">()</span>:</span></div><div class="line">  print(sys.info)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</div><div class="line">  my_func()</div><div class="line"></div></pre></td></tr></table></figure>          
<p><br></p>
<p>JavaScript:<br><figure class="highlight javascript"><figcaption><span>some simple AngularJS controller</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">angular.module(<span class="string">'angularFullstackApp'</span>)</div><div class="line">  .controller(<span class="string">'CategoryCtrl'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">$scope, hierarchy, $location</span>) </span>&#123;</div><div class="line">    $scope.message = <span class="string">'Hello'</span>;</div><div class="line"></div><div class="line">    $scope.categories = [];</div><div class="line"></div><div class="line">    $scope.populateCategories = <span class="function"><span class="keyword">function</span>(<span class="params">allCategories</span>) </span>&#123;</div><div class="line">      $scope.categories = allCategories;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    $scope.categoryClicked = <span class="function"><span class="keyword">function</span>(<span class="params">categoryId</span>) </span>&#123;</div><div class="line">      <span class="built_in">console</span>.log(<span class="string">'category clicked: '</span>, categoryId);</div><div class="line">      $location.url(<span class="string">'/topics'</span>).search(<span class="string">'category'</span>,categoryId);</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    hierarchy.getAllCategories().then($scope.populateCategories);</div><div class="line">  &#125;);</div><div class="line"></div></pre></td></tr></table></figure></p>
<p><br></p>
<p>…and Go:<br><figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">  fmt.Println(<span class="string">"Hello World from Go!"</span>)</div><div class="line">  <span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="number">20</span>; i++ &#123;</div><div class="line">    <span class="keyword">var</span> t = <span class="string">""</span></div><div class="line">    <span class="keyword">if</span> i%<span class="number">2</span> == <span class="number">0</span> &#123;</div><div class="line">      t = <span class="string">"even"</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      t = <span class="string">"odd"</span></div><div class="line">    &#125;</div><div class="line">    fmt.Printf(<span class="string">"Number: %02d binary: %05b octal: %02o %#x\t is %v\n"</span>, i, i, i, i, t)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure></p>
<p>and this… is how Hexo displays gists:</p>
<script src="//gist.github.com/38c4ca8e73d9792f8eae.js"></script>
<p>To sum up: I have created my main github page and within minutes I had it published.</p>
<p>I haven’t thought that setting up new blog using static site generator will be so much fun. I regret I haven’t devoted some time to do it much earlier this year… anyway, I hope that this blog is going to be an opportunity to share what I learn.</p>
<p>As for the moment, the only thing that bothers me is: how do I write blog notes using differnt machine than the one I have everything set up? With Wordpress and other dynamic bloggin platforms it was easy - most of them offered some kind of web interface (administration panel) one may use to write a blog note. With Hexo this is not the way. I will need to think of some way to make it possible. I will post if I have something to share on this topic. </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I was thinkig for quite some time how to migrate my old blog from Wordpress to some other blogging platform. Couple of reasons why I star
    
    </summary>
    
      <category term="blogging" scheme="http://maciektalaska.github.io/categories/blogging/"/>
    
    
      <category term="hexo" scheme="http://maciektalaska.github.io/tags/hexo/"/>
    
      <category term="Nikola" scheme="http://maciektalaska.github.io/tags/Nikola/"/>
    
      <category term="Jekyll" scheme="http://maciektalaska.github.io/tags/Jekyll/"/>
    
      <category term="static site generators" scheme="http://maciektalaska.github.io/tags/static-site-generators/"/>
    
  </entry>
  
</feed>
